// RectangularUnitCell class
// Unit cell for which the full crystal structure can be generated by translating in the 3 cartesian directions

#pragma once

#include<iostream>
#include<vector>
#include<cmath>
#include"Eigen/Dense"

class RectangularUnitCell{
	protected:
		std::vector<Eigen::Vector3d> primitiveVectors;
		std::vector<Eigen::Vector3d> reciprocalLatticeVectors;
		double latConst;
		std::vector<Eigen::Vector3d> generationParticles;				// Points from which a desired Rectangular simulation cell can be filled by translating it in the 3 cartesian directions
		std::vector<Eigen::Vector3d> cellVectors;							// sides of the cell with mutually orthogonal sides 
		void GenerateReciprocalLatticeVectors();
	public:
		RectangularUnitCell();
		RectangularUnitCell(double latConst);
		void SetLatticeConstant(double latConst);
		double GetLatticeConstant();
		std::vector<Eigen::Vector3d> GetGenerationParticles();
		std::vector<Eigen::Vector3d> GetPrimitiveVectors();
		std::vector<Eigen::Vector3d> GetCellVectors();
		double CalculatePrimitiveCellVolume();
		double Calculate1stBZVolume();
		std::vector<Eigen::Vector3d>& GetReciprocalLatticeVectorsReference();
};
